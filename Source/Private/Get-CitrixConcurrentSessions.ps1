function Get-CitrixConcurrentSessions {
    
    <#
    .SYNOPSIS
    
    .DESCRIPTION
    
    .LINK
    https://github.com/karjona/citrix-odata
    
    .PARAMETER DeliveryController
    Specifies a single Citrix Virtual Apps & Desktops Delivery Controller to collect data from.
    
    .PARAMETER Credential
    Specifies a user account that has permission to send the request. The default is the current user. A minimum of
    read-only administrator permissions on Citrix Virtual Apps & Desktops are required to collect this data.
    
    Enter a PSCredential object, such as one generated by the Get-Credential cmdlet.
    
    .COMPONENT
    citrix-odata
    #>
    
    [CmdletBinding()]
    [OutputType('PSCustomObject')]
    
    param(
    [Parameter(Mandatory=$true)]
    [String]
    $DeliveryController,
    
    [Parameter()]
    [PSCredential]
    $Credential,
    
    [Parameter(Mandatory=$true)]
    [DateTime]
    $StartDate,
    
    [Parameter(Mandatory=$true)]
    [DateTime]
    $EndDate
    )
    
    process {
        try {
            #$Query = "`$filter=(SummaryDate gt DateTime'$(Get-Date -Date $StartDate -Format "yyyy-MM-ddTHH:mm:ss")') and (SummaryDate lt DateTime'$(Get-Date -Date $EndDate -Format "yyyy-MM-ddTHH:mm:ss")') and (Granularity eq 1440)"
            $Query = "`$filter=(SummaryDate gt DateTime'$(Get-Date -Date $StartDate -Format "yyyy-MM-ddTHH:mm:ss")') and (SummaryDate lt DateTime'$(Get-Date -Date $EndDate -Format "yyyy-MM-ddTHH:mm:ss")')"
            if ($Credential) {
                $ConcurrentSessions = Invoke-CitrixMonitorServiceQuery -DeliveryController $DeliveryController `
                -Credential $Credential -Endpoint 'SessionActivitySummaries' -Query $Query -ErrorAction Stop
            } else {
                $ConcurrentSessions = Invoke-CitrixMonitorServiceQuery -DeliveryController $DeliveryController `
                -Credential $Credential -Endpoint 'SessionActivitySummaries' -Query $Query -ErrorAction Stop
            }
        } catch {
            $ConnectionError = $_
            throw $ConnectionError
        }
        $ConcurrentSessions
    }
}
